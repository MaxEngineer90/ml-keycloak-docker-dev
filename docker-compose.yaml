version: '3.8'

services:
    # Keycloak Server
  keycloak:
    image: quay.io/keycloak/keycloak:26.2.5
    container_name: ml-keycloak-server
    restart: unless-stopped
    command: 
      - start-dev
      - --import-realm
      - --spi-theme-cache-themes=false
      - --spi-theme-cache-templates=false
      - -spi-theme-static-max-age=-1
    environment:
      # Database Configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-keycloak}
      KC_DB_USERNAME: ${POSTGRES_USER:-keycloak}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD:-keycloak}
      
      # Keycloak Admin User
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USER:-admin}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      
      # Development Settings
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: ${KC_LOG_LEVEL:-INFO}
    volumes:
      - ./keycloak/import:/opt/keycloak/import
      - ./keycloak/themes/custom-theme:/opt/keycloak/themes/custom-theme
      - ./keycloak/themes/future-2025-theme:/opt/keycloak/themes/future-2025-theme
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ml-keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s


  # PostgreSQL Database für Keycloak
  postgres:
    image: postgres:17-alpine
    container_name: ml-keycloak-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-keycloak}
      POSTGRES_USER: ${POSTGRES_USER:-keycloak}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-keycloak}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - ml-keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak} -d ${POSTGRES_DB:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5



  # Optional: pgAdmin für Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ml-keycloak-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@ml.de}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgres
    networks:
      - ml-keycloak-network
    profiles:
      - tools

  # Optional: Mailhog für E-Mail Testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: ml-keycloak-mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_WEB_PORT:-8025}:8025"
    networks:
      - ml-keycloak-network
    profiles:
      - tools

networks:
  ml-keycloak-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local